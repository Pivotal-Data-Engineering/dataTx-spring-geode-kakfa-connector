plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'io.pivotal.services.dataTx'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	mavenLocal()
}

ext {
	set('springCloudVersion', "Hoxton.RELEASE")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-bus'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.geode:spring-geode-starter:1.2.2.RELEASE'
	implementation 'org.springframework.kafka:spring-kafka'

	//------------------------------
	compile('io.pivotal.services.dataTx:dataTx-geode-extensions-core:2.1.1')
	{
		exclude group: 'org.apache.logging.log4j'
		exclude group: 'org.apache.geode'
		exclude group: 'io.pivotal.gemfire'
		exclude group: 'org.springframework.geode'

	}
	/*compile('io.pivotal.services.dataTx:dataTx-spring-batch-geode-extensions:0.0.1-SNAPSHOT')
	{
		exclude group: 'org.apache.logging.log4j'
		exclude group: 'org.apache.geode'
		exclude group: 'io.pivotal.gemfire'
		exclude group: 'org.springframework.geode'
	}*/
	
	//runtimeOnly 'org.hsqldb:hsqldb'
	// https://mvnrepository.com/artifact/com.h2database/h2
	runtimeOnly 'com.h2database:h2'
	//, version: '1.4.200'

	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-batch'
	compile group: 'org.springframework.batch', name: 'spring-batch-infrastructure', version: '4.2.0.RELEASE'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
