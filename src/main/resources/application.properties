spring.data.gemfire.pool.locators=localhost[10334]
geode.to.kakfa.chunkSize=10
kakfa.to.geode.chunkSize=10


# Configures the log level used to output log messages at GemFire cache runtime.
# default: config
#spring.data.gemfire.cache.log-level=config

# Configures the minimum number of connections to keep available at all times.
# default -1
#spring.data.gemfire.pool.min-connections=1

#Configures the name of this GemFire member in the cluster (distributed system)
# default SpringBasedCacheClientApplication
#spring.data.gemfire.name=myapp

# Configures how often to send client statistics to the server in milliseconds.
# Default -1
#spring.data.gemfire.pool.default.statistic-interval=-1

spring.main.allow-bean-definition-overriding=true
# w210000

# Configures whether connectivity between the Spring, GemFire/Geode application
# should be established using HTTP.
# Neededed by @EnableClusterConfiguration to dynamically create region locally
#spring.data.gemfire.management.use-http=true


spring.security.user.name=nyla
spring.security.user.password=password

#----------------------------
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=hello
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000

spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=io.pivotal

# Database Settings
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect